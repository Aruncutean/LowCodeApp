{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet CreateAppPopapComponent = class CreateAppPopapComponent {\n  constructor(router, appService, ssm) {\n    this.router = router;\n    this.appService = appService;\n    this.ssm = ssm;\n    this.isActive = false;\n    this.closePopapEmitter = new EventEmitter();\n    this.aplicationFormGroup = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      description: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(105)])\n    });\n  }\n  get name() {\n    return this.aplicationFormGroup.get('name');\n  }\n  get description() {\n    return this.aplicationFormGroup.get('description');\n  }\n  closePopap() {\n    this.closePopapEmitter.emit();\n  }\n  saveAplication() {\n    if (this.aplicationFormGroup.valid) {\n      this.appService.addAplicatio({\n        name: String(this.aplicationFormGroup.value.name),\n        description: String(this.aplicationFormGroup.value.description),\n        idUser: ''\n      }).subscribe(data => {\n        console.log(data);\n      });\n    } else {}\n  }\n};\n__decorate([Input()], CreateAppPopapComponent.prototype, \"isActive\", void 0);\n__decorate([Output()], CreateAppPopapComponent.prototype, \"closePopapEmitter\", void 0);\nCreateAppPopapComponent = __decorate([Component({\n  selector: 'create-app-popap',\n  templateUrl: './create-app-popap.component.html',\n  styleUrls: ['./create-app-popap.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})], CreateAppPopapComponent);\nexport { CreateAppPopapComponent };","map":{"version":3,"mappings":";AAAA,SACEA,uBAAuB,EAEvBC,SAAS,EACTC,YAAY,EACZC,KAAK,EACLC,MAAM,QAID,eAAe;AACtB,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAU5D,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAoBlCC,YACUC,MAAc,EACdC,UAA6B,EAC7BC,GAAiC;IAFjC,WAAM,GAANF,MAAM;IACN,eAAU,GAAVC,UAAU;IACV,QAAG,GAAHC,GAAG;IAtBJ,aAAQ,GAAY,KAAK;IACxB,sBAAiB,GAAsB,IAAIV,YAAY,EAAE;IACnE,wBAAmB,GAAG,IAAII,SAAS,CAAC;MAClCO,IAAI,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACzEC,WAAW,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAC/BE,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,EACvBR,UAAU,CAACU,SAAS,CAAC,GAAG,CAAC,CAC1B;KACF,CAAC;EAcC;EAZH,IAAIJ,IAAI;IACN,OAAO,IAAI,CAACK,mBAAmB,CAACC,GAAG,CAAC,MAAM,CAAC;EAC7C;EAEA,IAAIH,WAAW;IACb,OAAO,IAAI,CAACE,mBAAmB,CAACC,GAAG,CAAC,aAAa,CAAC;EACpD;EAQAC,UAAU;IACR,IAAI,CAACC,iBAAiB,CAACC,IAAI,EAAE;EAC/B;EAEAC,cAAc;IACZ,IAAI,IAAI,CAACL,mBAAmB,CAACM,KAAK,EAAE;MAClC,IAAI,CAACb,UAAU,CACZc,YAAY,CAAC;QACZZ,IAAI,EAAEa,MAAM,CAAC,IAAI,CAACR,mBAAmB,CAACS,KAAK,CAACd,IAAI,CAAC;QACjDG,WAAW,EAAEU,MAAM,CAAC,IAAI,CAACR,mBAAmB,CAACS,KAAK,CAACX,WAAW,CAAC;QAC/DY,MAAM,EAAE;OACT,CAAC,CACDC,SAAS,CAAEC,IAAS,IAAI;QACvBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB,CAAC,CAAC;KACL,MAAM;EAET;CACD;AA3CUG,YAAR9B,KAAK,EAAE,yDAA2B;AACzB8B,YAAT7B,MAAM,EAAE,kEAA2D;AAFzDI,uBAAuB,eANnCP,SAAS,CAAC;EACTiC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,mCAAmC,CAAC;EAChDC,eAAe,EAAErC,uBAAuB,CAACsC;CAC1C,CAAC,GACW9B,uBAAuB,CA4CnC;SA5CYA,uBAAuB","names":["ChangeDetectionStrategy","Component","EventEmitter","Input","Output","FormControl","FormGroup","Validators","CreateAppPopapComponent","constructor","router","appService","ssm","name","required","minLength","description","maxLength","aplicationFormGroup","get","closePopap","closePopapEmitter","emit","saveAplication","valid","addAplicatio","String","value","idUser","subscribe","data","console","log","__decorate","selector","templateUrl","styleUrls","changeDetection","OnPush"],"sourceRoot":"","sources":["C:\\Users\\Aruncutean\\Desktop\\Project LowCodeApp\\create-app\\src\\app\\module_create_app\\create_aplication\\create-app-popap.component.ts"],"sourcesContent":["import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AplicationService } from 'src/app/service/aplication.service';\r\n\r\n@Component({\r\n  selector: 'create-app-popap',\r\n  templateUrl: './create-app-popap.component.html',\r\n  styleUrls: ['./create-app-popap.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CreateAppPopapComponent {\r\n  @Input() isActive: boolean = false;\r\n  @Output() closePopapEmitter: EventEmitter<any> = new EventEmitter();\r\n  aplicationFormGroup = new FormGroup({\r\n    name: new FormControl('', [Validators.required, Validators.minLength(6)]),\r\n    description: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(5),\r\n      Validators.maxLength(105)\r\n    ])\r\n  });\r\n\r\n  get name() {\r\n    return this.aplicationFormGroup.get('name');\r\n  }\r\n\r\n  get description() {\r\n    return this.aplicationFormGroup.get('description');\r\n  }\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private appService: AplicationService,\r\n    private ssm: SessionStorageManagerService\r\n  ) {}\r\n\r\n  closePopap() {\r\n    this.closePopapEmitter.emit();\r\n  }\r\n\r\n  saveAplication() {\r\n    if (this.aplicationFormGroup.valid) {\r\n      this.appService\r\n        .addAplicatio({\r\n          name: String(this.aplicationFormGroup.value.name),\r\n          description: String(this.aplicationFormGroup.value.description),\r\n          idUser: ''\r\n        })\r\n        .subscribe((data: any) => {\r\n          console.log(data);\r\n        });\r\n    } else {\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}